package com.ezen.myproject.handler;

import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.ezen.myproject.domain.FileVO;

import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@AllArgsConstructor
@Component
public class FileHandler {
	
	// 내파일 기본 경로
	private final String UP_DIR = "D:\\_myweb\\_java\\fileupload";
	
	public List<FileVO> uploadfiles(MultipartFile[] files){
		//멀티파트 파일 객체를 받아서 fileVO 형태로 저장 한 후
		//오늘날짜의 경로(가변형태로 생성) / 실제 파일을 해당 경로에 저장
		//fileVO를 리스트에 추가 => return list;
		
		//오늘날짜 경로 생성
		LocalDate date = LocalDate.now();
		log.info("date : " + date);
		String today = date.toString(); // 2023-10-13 String으로 변환
		//2023\\10\\13 String 생성
		today = today.replace("-", File.separator);
		
		//오늘날짜(today)의 폴더 구성
		File folders = new File(UP_DIR, today);
		if(!folders.exists()) {
			folders.mkdirs(); // 폴더 생성 명령
		}
		
		//리스트 설정
		List<FileVO> flist = new ArrayList<FileVO>();
		//여러개의 파일들 중 순서대로 하나의 파일 가져오기
		for(MultipartFile file : files) {
			FileVO fvo = new FileVO();
			fvo.setSave_dir(today);
			fvo.setFile_size(file.getSize()); // 파일 사이즈는 return long
			
			//file.getName() => 파일 객체의 종류
			//file.getOriginalFilename() => 파일 이름, 파일 경로를 포함하고 있을 수 있음
			String originalFileName = file.getOriginalFilename();
			String onlyFileName = originalFileName.substring(originalFileName.lastIndexOf(File.separator)+1); // 실 파일명만추출
			
			log.info("onlyFilename >>>>> " + onlyFileName);
			fvo.setFile_name(onlyFileName);
		}
		
		return flist;
	}
	
}
